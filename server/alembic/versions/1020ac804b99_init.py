"""init

Revision ID: 1020ac804b99
Revises: 
Create Date: 2023-12-22 13:27:23.744891

"""
from typing import Sequence, Union

import fastapi_storages
from alembic import op
import sqlalchemy as sa

from src.common.storage import storage

# revision identifiers, used by Alembic.
revision: str = '1020ac804b99'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None

permission_action = sa.Enum('create_parent', name='permission_action')
permission_access = sa.Enum('read', 'edit', name='permission_access')
gender = sa.Enum('male', 'female', name='gender')
morning_filter_status = sa.Enum('filled', 'not_filled', 'missing', 'confirmed', 'rejected', name='morning_filter_status')
receipt_type = sa.Enum('fee', 'services', name='receipt_type')
receipt_status = sa.Enum('not_paid', 'paid', name='receipt_status')


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('cities',
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('countries',
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('defecations',
    sa.Column('value', sa.String(), nullable=False),
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('diseases_groups',
    sa.Column('note', sa.String(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('jobs',
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('value', sa.String(), nullable=True),
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('medicine_cards',
    sa.Column('weight', sa.Integer(), nullable=False),
    sa.Column('heigth', sa.Integer(), nullable=False),
    sa.Column('allergies', sa.ARRAY(sa.String()), server_default='{}', nullable=False),
    sa.Column('notes', sa.ARRAY(sa.String()), server_default='{}', nullable=False),
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('permissions',
    sa.Column('action', permission_action, nullable=False),
    sa.Column('access', permission_access, nullable=False),
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('phones',
    sa.Column('phone', sa.String(), nullable=False),
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('regions',
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('relation_degrees',
    sa.Column('value', sa.String(), nullable=False),
    sa.Column('title', sa.String(), nullable=False),
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('skin_coverings',
    sa.Column('value', sa.String(), nullable=False),
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('yawns',
    sa.Column('value', sa.String(), nullable=False),
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('accounts',
    sa.Column('created_by_id', sa.Integer(), nullable=True),
    sa.Column('phone_id', sa.Integer(), nullable=False),
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['created_by_id'], ['accounts.id'], ),
    sa.ForeignKeyConstraint(['phone_id'], ['phones.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('diseases',
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('group_id', sa.Integer(), nullable=True),
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.ForeignKeyConstraint(['group_id'], ['diseases_groups.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('profiles',
    sa.Column('first_name', sa.String(), nullable=False),
    sa.Column('middle_name', sa.String(), nullable=False),
    sa.Column('last_name', sa.String(), nullable=False),
    sa.Column('birthdate', sa.String(), nullable=False),
    sa.Column('gender', gender, nullable=False),
    sa.Column('avatar', fastapi_storages.integrations.sqlalchemy.FileType(storage=storage), nullable=True),
    sa.Column('email', sa.String(), nullable=True),
    sa.Column('phone_id', sa.Integer(), nullable=True),
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.ForeignKeyConstraint(['phone_id'], ['phones.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('addresses',
    sa.Column('country_id', sa.Integer(), nullable=True),
    sa.Column('city_id', sa.Integer(), nullable=True),
    sa.Column('region_id', sa.Integer(), nullable=True),
    sa.Column('profile_id', sa.Integer(), nullable=True),
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.ForeignKeyConstraint(['city_id'], ['cities.id'], ),
    sa.ForeignKeyConstraint(['country_id'], ['countries.id'], ),
    sa.ForeignKeyConstraint(['profile_id'], ['profiles.id'], ),
    sa.ForeignKeyConstraint(['region_id'], ['regions.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('profile_id')
    )
    op.create_table('medicine_cards_diseases',
    sa.Column('medicine_card_id', sa.Integer(), nullable=False),
    sa.Column('disease_id', sa.Integer(), nullable=False),
    sa.Column('started_at', sa.Date(), nullable=False),
    sa.Column('finished_at', sa.Date(), nullable=True),
    sa.Column('is_chronic', sa.Boolean(), nullable=False),
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.ForeignKeyConstraint(['disease_id'], ['diseases.id'], ),
    sa.ForeignKeyConstraint(['medicine_card_id'], ['medicine_cards.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('parents',
    sa.Column('account_id', sa.Integer(), nullable=False),
    sa.Column('profile_id', sa.Integer(), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('work_phone', sa.String(), nullable=True),
    sa.Column('job', sa.String(), nullable=True),
    sa.Column('place_of_work', sa.String(), nullable=True),
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.ForeignKeyConstraint(['account_id'], ['accounts.id'], ),
    sa.ForeignKeyConstraint(['profile_id'], ['profiles.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('account_id'),
    sa.UniqueConstraint('profile_id')
    )
    op.create_table('password_recovery_requests',
    sa.Column('expired_at', sa.DateTime(), nullable=False),
    sa.Column('code', sa.String(), nullable=False),
    sa.Column('account_id', sa.Integer(), nullable=False),
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['account_id'], ['accounts.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('passwords',
    sa.Column('hash', sa.String(), nullable=False),
    sa.Column('account_id', sa.Integer(), nullable=False),
    sa.Column('is_temporary', sa.Boolean(), nullable=False),
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['account_id'], ['accounts.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('phone_recovery_requests',
    sa.Column('expired_at', sa.DateTime(), nullable=False),
    sa.Column('code', sa.String(), nullable=False),
    sa.Column('account_id', sa.Integer(), nullable=False),
    sa.Column('phone_id', sa.Integer(), nullable=False),
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['account_id'], ['accounts.id'], ),
    sa.ForeignKeyConstraint(['phone_id'], ['phones.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('kindergartens',
    sa.Column('address_id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('phone_id', sa.Integer(), nullable=False),
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.ForeignKeyConstraint(['address_id'], ['addresses.id'], ),
    sa.ForeignKeyConstraint(['phone_id'], ['phones.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('address_id'),
    sa.UniqueConstraint('phone_id')
    )
    op.create_table('kindergarten_groups',
    sa.Column('kindergarten_id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('age_min', sa.Integer(), nullable=False),
    sa.Column('age_max', sa.Integer(), nullable=False),
    sa.Column('number', sa.Integer(), nullable=False),
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.ForeignKeyConstraint(['kindergarten_id'], ['kindergartens.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('roles',
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('kindergarten_id', sa.Integer(), nullable=False),
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.ForeignKeyConstraint(['kindergarten_id'], ['kindergartens.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('staff',
    sa.Column('account_id', sa.Integer(), nullable=False),
    sa.Column('profile_id', sa.Integer(), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('is_admin', sa.Boolean(), nullable=False),
    sa.Column('waiting_for_approve', sa.Boolean(), nullable=False),
    sa.Column('kindergarten_id', sa.Integer(), nullable=False),
    sa.Column('job_id', sa.Integer(), nullable=True),
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.ForeignKeyConstraint(['account_id'], ['accounts.id'], ),
    sa.ForeignKeyConstraint(['job_id'], ['jobs.id'], ),
    sa.ForeignKeyConstraint(['kindergarten_id'], ['kindergartens.id'], ),
    sa.ForeignKeyConstraint(['profile_id'], ['profiles.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('account_id'),
    sa.UniqueConstraint('profile_id')
    )
    op.create_table('children',
    sa.Column('profile_id', sa.Integer(), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('group_id', sa.Integer(), nullable=False),
    sa.Column('medicine_card_id', sa.Integer(), nullable=True),
    sa.Column('personal_acc', sa.String(), nullable=True),
    sa.Column('current_group_id', sa.Integer(), nullable=True),
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.ForeignKeyConstraint(['current_group_id'], ['kindergarten_groups.id'], ),
    sa.ForeignKeyConstraint(['group_id'], ['kindergarten_groups.id'], ),
    sa.ForeignKeyConstraint(['medicine_card_id'], ['medicine_cards.id'], ),
    sa.ForeignKeyConstraint(['profile_id'], ['profiles.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('medicine_card_id'),
    sa.UniqueConstraint('profile_id')
    )
    op.create_table('kindgarten_groups_staff',
    sa.Column('kindergarten_group_id', sa.Integer(), nullable=False),
    sa.Column('staff_id', sa.Integer(), nullable=False),
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['kindergarten_group_id'], ['kindergarten_groups.id'], ),
    sa.ForeignKeyConstraint(['staff_id'], ['staff.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('roles_permissions',
    sa.Column('permission_id', sa.Integer(), nullable=False),
    sa.Column('role_id', sa.Integer(), nullable=False),
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['permission_id'], ['permissions.id'], ),
    sa.ForeignKeyConstraint(['role_id'], ['roles.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('staff_roles',
    sa.Column('staff_id', sa.Integer(), nullable=False),
    sa.Column('role_id', sa.Integer(), nullable=False),
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['role_id'], ['roles.id'], ),
    sa.ForeignKeyConstraint(['staff_id'], ['staff.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('children_parents',
    sa.Column('parent_id', sa.Integer(), nullable=False),
    sa.Column('child_id', sa.Integer(), nullable=False),
    sa.Column('relation_id', sa.Integer(), nullable=False),
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.ForeignKeyConstraint(['child_id'], ['children.id'], ),
    sa.ForeignKeyConstraint(['parent_id'], ['parents.id'], ),
    sa.ForeignKeyConstraint(['relation_id'], ['relation_degrees.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('morning_filters',
    sa.Column('temperature', sa.Float(), nullable=True),
    sa.Column('note', sa.String(), nullable=True),
    sa.Column('child_id', sa.Integer(), nullable=False),
    sa.Column('confirmed_at', sa.DateTime(), nullable=True),
    sa.Column('confirmed_by_id', sa.Integer(), nullable=True),
    sa.Column('status', morning_filter_status, nullable=False),
    sa.Column('yawn_id', sa.Integer(), nullable=True),
    sa.Column('defecation_id', sa.Integer(), nullable=True),
    sa.Column('skin_covering_id', sa.Integer(), nullable=True),
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['child_id'], ['children.id'], ),
    sa.ForeignKeyConstraint(['confirmed_by_id'], ['staff.id'], ),
    sa.ForeignKeyConstraint(['defecation_id'], ['defecations.id'], ),
    sa.ForeignKeyConstraint(['skin_covering_id'], ['skin_coverings.id'], ),
    sa.ForeignKeyConstraint(['yawn_id'], ['yawns.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('receipts',
    sa.Column('amount', sa.Integer(), nullable=False),
    sa.Column('kindergarten_id', sa.Integer(), nullable=False),
    sa.Column('child_id', sa.Integer(), nullable=False),
    sa.Column('type', receipt_type, nullable=False),
    sa.Column('status', receipt_status, nullable=False),
    sa.Column('paid_at', sa.DateTime(), nullable=True),
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['child_id'], ['children.id'], ),
    sa.ForeignKeyConstraint(['kindergarten_id'], ['kindergartens.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('receipts')
    op.drop_table('morning_filters')
    op.drop_table('children_parents')
    op.drop_table('staff_roles')
    op.drop_table('roles_permissions')
    op.drop_table('kindgarten_groups_staff')
    op.drop_table('children')
    op.drop_table('staff')
    op.drop_table('roles')
    op.drop_table('kindergarten_groups')
    op.drop_table('kindergartens')
    op.drop_table('phone_recovery_requests')
    op.drop_table('passwords')
    op.drop_table('password_recovery_requests')
    op.drop_table('parents')
    op.drop_table('medicine_cards_diseases')
    op.drop_table('addresses')
    op.drop_table('profiles')
    op.drop_table('diseases')
    op.drop_table('accounts')
    op.drop_table('yawns')
    op.drop_table('skin_coverings')
    op.drop_table('relation_degrees')
    op.drop_table('regions')
    op.drop_table('phones')
    op.drop_table('permissions')
    op.drop_table('medicine_cards')
    op.drop_table('jobs')
    op.drop_table('diseases_groups')
    op.drop_table('defecations')
    op.drop_table('countries')
    op.drop_table('cities')
    # ### end Alembic commands ###
